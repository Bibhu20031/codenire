services:
  deproxy:
    container_name: deproxy_dev
    image: codiew/codenire-deproxy:latest
    build:
      context: ./deproxy
      dockerfile: Dockerfile
    restart: always
    environment:
      ALLOW_HOSTS: "" # format "domain1.com,domain2.com"
#      ALLOW_HOSTS: "__YOUR_S3_HOST_DOMAIN_PREFIX__" # .digitalocean.com for example
    ports:
      - "3128:3128"
    networks:
      - isolated_net


  playground:
    container_name: play_dev
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./var/plugin/plugin:/plugin
    restart: always
    networks:
      - sandnet
      - isolated_net
    entrypoint: [
      "/playground",
      "--backend-url", "http://sandbox_dev",
      "--port", "8081",
#      "--hooks-plugins", "/plugin", # TODO:: describe feature
      "--external-templates", "go,go-prev",
    ]

  sandbox:
    container_name: sandbox_dev
    build:
      context: ./sandbox
      dockerfile: Dockerfile
    ports:
      - "8082:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - sandnet
      - isolated_net
    restart: always
    environment:
      HTTP_PROXY: "http://deproxy_dev:3128"
      HTTPS_PROXY: "http://deproxy_dev:3128"
#      AWS_ACCESS_KEY_ID: "__AWS_SECRET_KEY_ID__"
#      AWS_SECRET_ACCESS_KEY: "__AWS_SECRET_ACCESS_KEY__"
#      AWS_REGION: "__YOUR_AWS_REGION__"
    entrypoint: [
      "/usr/local/bin/sandbox",
      "--replicaContainerCnt", "1",
      "--port", "80",
      "--dev",
      "--isolatedNetwork", "codenire_isolated_net", # network name has prefix (codenire_)
      "--isolatedGateway", "http://deproxy_dev:3128",

#     # First variant
      "--dockerFilesPath", "/dockerfiles",

#      # Second variant
#      "--s3DockerfilesEndpoint", "__YOUR_S3_HOST__",
#      "--s3DockerfilesBucket", "__YOUR_S3_BUCKET__",
#      "--s3DockerfilesPrefix", "__YOUR_DIR_IN_S3_BUCKET__",
    ]

networks:
  sandnet:
    name: codenire
  isolated_net:
    driver: bridge
